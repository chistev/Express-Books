<%- include('../layout') %>

<title><%= title %></title>
<%- include('../navbar') %>

<div class="container">
    <div class="row">
        <div class="col-lg-3 col-md-3 col-10 d-flex flex-column ">
            <div class="fixed-book-image-container">
                <div class="ms-3">
                    <img src="<%= book.image %>" alt="<%= book.title %>" class="image" style="width: 65%;">
                </div>
            </div>
        </div>

        <div class="col-lg-9 col-md-7 ">
            <div class="mb-1" style="font-family: Georgia, serif; font-weight: 600; font-size: 36px; line-height: 46px; color: #1e1915;">
                    <%= book.title %>
            </div>
            <div class="mb-1">
                <div style="font-family: Georgia, serif; font-weight: 400; font-size: 20px; line-height: 28px; color: #1e1915;">
                    <%= book.author %>
                </div>
            </div>
            <div class="description-container" id="description-container-<%= book._id %>">
                <p class="mb-2 short-description">
                    <%- book.description %>
                </p>
                <div class="show-more-button">
                    <a class="text-decoration-none show-more-link" data-book-id="<%= book._id %>" href="#">
                        Show more &#9662;
                    </a>
                </div>
            </div>
            <div class="d-flex align-items-center mt-3 book-details-genres">
                <div>Genres:</div>
                <% book.genre.forEach(function(genre) { %>
                    <div class="ms-2" style="font-family: Arial, sans-serif; font-weight: 600; font-size: 14px; line-height: 20px;">
                        <a class="genre-link" href="/genre/<%= genre %>">
                            <%= genre %>
                        </a>
                    </div>
                <% }); %>
            </div>
            <div class="mt-2 book-pages-book-media-type"><%= book.pages %> pages, <%= book.mediaType %></div>
            <div class="mt-2" style="font-family: Arial, sans-serif; font-weight: 400; font-size: 14px; line-height: 18px; color: #707070;">
                First published <%= new Date(book.publishedDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %>
            </div>
            <hr>
            
            <div class="book-details-reviews">Reviews</div>
            <div class="d-flex align-items-center justify-content-center">
                <div class="mt-5 what-do-you-think">
                    What do you think?
                </div>
                
            </div>
            <div class="d-flex row align-items-center justify-content-center">
                    <a href="<%= loggedIn ? `/write_review/${book._id}` : '/signup' %>"  class="btn mb-2" style="background-color: #1e1915; 
                        color: #ffffff; 
                        border-radius: 20%; 
                        width: 50%;">
                    Write a Review
                </a>
                <hr>
            </div>
            <div style="font-family: Georgia, serif; font-weight: 600; font-size: 20px; line-height: 28px; color: #1e1915;">
                Community Reviews
            </div>
            
            <div class="ms-3" style="font-family: Arial, sans-serif; font-weight: 400; font-size: 14px; line-height: 19px; color: #707070;">
                Displaying <%= reviewCount %> reviews
            </div>
            <% if (reviews && reviews.length > 0) { %>
                <% reviews.forEach(review => { %>
                    <div class="row mt-3">
                <div class="col-2">
                    <% if (review.user && review.user.profilePhoto) { %>
                        <img src="<%= review.user.profilePhoto %>" style="border-radius: 50%; width: 60%; object-fit: contain;">
                      <% } else { %>
                        <i class="bi bi-person-circle" style="font-size: 40px;"></i>
                    <% } %>
                    
                        <div style="font-family: Georgia, serif; font-weight: 600; font-size: 14px; line-height: 20px; color: #1e1915;">
                            <%= review.user.fullName %>
                        </div>
                        <div style="font-family: Arial, sans-serif; font-weight: 400; font-size: 14px; line-height: 19px; color: #707070;">
                            <a href="/user/<%= review.user._id %>/mybooks" style="color: inherit; text-decoration: none;">
                                <%= review.userReviewCount %> reviews
                            </a>
                        </div>
                </div>
                  
                <div class="col-10">
                    <div class="d-flex justify-content-between">
                        <div class="ms-auto">
                            <%= review.formattedDate %>
                        </div>
                    </div>
                    <div class="review-container_" id="review-container-<%= review._id %>">
                        <div class="review-content-short">
                            <p class="mb-2">
                                <%- review.truncatedContent %>
                            </p>
                            <% if (review.truncatedContent.length > 200) { %>
                                <div class="show-more-button">
                                    <a class="text-decoration-none show-more-link" data-review-id="<%= review._id %>" href="#">
                                        Show more &#9662;
                                    </a>
                                </div>
                            <% } %>
                        </div>
                    </div>
                     
                     
                    <div class="review-container" data-review-id="<%= review._id %>">
                        <div class="mt-2 book-details-likes-and-comments">
                            <span class="like-count"><%= review.likes.length %></span> likes 
                            <span class="comments-toggle" style="cursor: pointer;">
                                <span class="comment-count"><%= review.comments.length %></span> comments
                            </span>
                        </div>
                        <div class="mt-2" style="font-family: Arial, sans-serif; font-weight: 600; font-size: 14px; line-height: 20px; color: #1e1915;">
                            <% if (loggedIn) { %>
                                <button style="color: <%= review.likedByUser ? '#377458' : '#1e1915' %>; font-family: Arial, sans-serif; font-weight: 600; font-size: 14px; line-height: 20px; background: none; border: none;" class="text-decoration-none like-link" data-review-id="<%= review._id %>" data-liked="<%= review.likedByUser %>">
                                  <i class="bi bi-hand-thumbs-up"></i> Like
                                </button>
                                <a id="comment-link-<%= review._id %>" style="font-family: Arial, sans-serif; font-weight: 600; font-size: 14px; line-height: 20px; color: #1e1915;" href="" class="text-decoration-none ms-3">
                                  <i class="bi bi-chat"></i> Comment
                                </a>
                              <% } else { %>
                                <button style="color: #1e1915; font-family: Arial, sans-serif; font-weight: 600; font-size: 14px; line-height: 20px; background: none; border: none;" class="text-decoration-none" onclick="location.href='/signin';">
                                  <i class="bi bi-hand-thumbs-up"></i> Like
                                </button>
                                <a id="comment-link-<%= review._id %>" style="font-family: Arial, sans-serif; font-weight: 600; font-size: 14px; line-height: 20px; color: #1e1915;" href="/signin" class="text-decoration-none ms-3">
                                  <i class="bi bi-chat"></i> Comment
                                </a>
                              <% } %>
                            </div>
                          
                            
                            <div id="comments-container-<%= review._id %>" class="comments-container" style="display: none;">
                                <div class="row">
                                    <div class="col-12">
                                        <div class="row">
                                            
                                            <% review.comments.slice(0, 5).forEach(comment => { %>
                                            <div class="col-12 mb-3 comment-container">
                                                <div class="row">
                                                    <div class="col-lg-1 col-md-2 col-1 mt-2">
                                                        <% if (comment.user && comment.user.profilePhoto) { %>
                                                            <img src="<%= review.user.profilePhoto %>" style="border-radius: 50%; width: 100%; object-fit: contain;">
                                                        <% } else { %>
                                                            <div class="user-image-placeholder"></div>
                                                        <% } %>
                                                    </div>
                                                    <div class="col-lg-10 col-md-10 mt-2">
                                                        <div class="d-flex justify-content-between">
                                                            <div class="d-flex">
                                                                <div style="font-family: Georgia, serif; font-weight: 600; font-size: 14px; line-height: 20px; color: #1e1915;">
                                                                    <%= comment.user.fullName %>
                                                                </div>
                                                                <div class="ms-2 comment-date">
                                                                    <%= comment.formattedDate %>
                                                                </div>
                                                            </div>
                                                            <% if (userId && comment.user && comment.user._id && comment.user._id.toString() === userId.toString()) { %>

                                                            <div class="comment-options">
                                                                <i style="cursor: pointer;" class="bi bi-three-dots fs-5" data-comment-id="<%= comment._id %>" onclick="toggleDeletePopup(event)"></i>
                                                                <div class="delete-popup" id="delete-popup-<%= comment._id %>" style="display: none;">
                                                                    <a href="#" onclick="confirmDeleteComment(event, '<%= comment._id %>')" class="text-decoration-none delete-link" style="font-family: Arial, sans-serif; font-weight: 400; font-size: 16px; color: #1e1915; border: 1px solid black; padding: 5px; border-radius: 5px;">
                                                                        <i class="bi bi-trash"></i> Delete this comment
                                                                    </a>
                                                                </div>
                                                            </div>
                                                            <% } %>
                                                        </div>
                
                                                        <% let truncatedContent = comment.content.length > 100 ? comment.content.substring(0, 100) + '...' : comment.content; %>
                
                                                        <div class="mt-2 comment-content-short" style="font-family: Arial, sans-serif; font-weight: 400; font-size: 16px; line-height: 23px; color: #1e1915;">
                                                            <%- truncatedContent %>
                                                            <% if (comment.content.length > 100) { %>
                                                                <div class="show-more-button">
                                                                    <a class="text-decoration-none show-more-link-comment show-more-link" data-comment-id="<%= comment._id %>" href="#">
                                                                        Show more &#9662;
                                                                    </a>
                                                                </div>
                                                            <% } %>
                                                        </div>
                
                                                        <div class="mt-2 comment-content-full">
                                                            <%- comment.content %>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <% }) %>
                                        </div>
                                    </div>
                                </div>
                                <div id="comment-box-<%= review._id %>" class="comment-box mt-2 d-flex flex-column" style="display: none;">
                                    <div class="comment-input-container">
                                        <div class="user-image-placeholder"></div> <!-- User image placeholder -->
                                        <textarea id="comment-input-<%= review._id %>" class="form-control comment-input" rows="2" placeholder="Add a comment" style="border-color: #707070;"></textarea>
                                    </div>
                                    <button id="comment-submit-<%= review._id %>" class="btn mt-1 comment-submit ms-auto" data-review-id="<%= review._id %>">Post</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr>
                </div>
                
                <% }) %>
            <% } %>
            </div>
        </div>
    </div>


<div id="loggedInStatus" data-logged-in="<%= loggedIn %>"></div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteCommentModal" tabindex="-1" aria-labelledby="deleteCommentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="deleteCommentModalLabel">Delete comment</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          Are you sure you want to delete this comment? This cannot be undone.
        </div>
        <div class="modal-footer">
          <button type="button" class="btn" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn" id="confirmDeleteButton">Confirm</button>
        </div>
      </div>
    </div>
  </div>

  <%- include('../footer') %>

 
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      function getBookIdFromUrl() {
        const urlParts = window.location.pathname.split('/');
        return urlParts[urlParts.indexOf('book') + 1];
      }
  
      document.addEventListener('click', function(event) {
        if (event.target.classList.contains('show-more-link')) {
          event.preventDefault();
          const reviewId = event.target.dataset.reviewId;
          const bookId = getBookIdFromUrl();
          const reviewContainer = document.getElementById(`review-container-${reviewId}`);
  
          console.log('Fetching full review for Book ID:', bookId, 'Review ID:', reviewId);
  
          fetch(`/book/${bookId}/review/${reviewId}`)
            .then(response => {
              if (!response.ok) {
                throw new Error('Network response was not ok');
              }
              return response.json();
            })
            .then(data => {
              console.log('Full review content received:', data.content);
              if (data.content) {
                // Find the review content short element inside the review container
                const reviewContentShort = reviewContainer.querySelector('.review-content-short');
                // Update only the content of the review content short element
                reviewContentShort.innerHTML = `<p class="mb-2">${data.content}</p>`;
              } else {
                console.log('No content received');
              }
            })
            .catch(error => {
              console.error('Error fetching full review:', error);
            });
        }
      });
    });
  </script>
    
<script>
    document.addEventListener("DOMContentLoaded", function() {
        console.log("Script loaded and DOM content is ready.");
    
        var likeLinks = document.querySelectorAll(".review-container .like-link");
        console.log("Like links found:", likeLinks);
    
        likeLinks.forEach(function(link) {
            link.addEventListener("click", function(event) {
                event.preventDefault();
                console.log("Like link clicked:", this);
    
                var loggedInStatus = document.getElementById('loggedInStatus').getAttribute('data-logged-in');
                var loggedIn = loggedInStatus === 'true';
    
                if (!loggedIn) {
                    console.log("User not logged in, redirecting to signup.");
                    window.location.href = '/signup';
                    return;
                }
    
                var reviewId = this.getAttribute("data-review-id");
                var liked = this.getAttribute("data-liked") === 'true';
                console.log("Review ID:", reviewId, "Already liked:", liked);
    
                var reviewContainer = this.closest('.review-container');
                var likeCountElement = reviewContainer.querySelector('.like-count');
    
                fetch(`/book/<%= book._id %>/review/${reviewId}/like`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    console.log("Like response data:", data);
                    likeCountElement.textContent = data.likes;
    
                    // Toggle the liked status
                    this.setAttribute("data-liked", !liked);
                    this.style.color = !liked ? '#377458' : '#1e1915';
                })
                .catch(error => {
                    console.error('Error liking review:', error);
                });
            });
        });
    });
</script>
    
<script>
    document.addEventListener("DOMContentLoaded", function() {
        var commentLinks = document.querySelectorAll('[id^="comment-link-"]');
        var commentToggles = document.querySelectorAll('.comments-toggle');

        commentLinks.forEach(function(commentLink) {
            commentLink.addEventListener("click", function(event) {
                event.preventDefault();
                var reviewId = this.getAttribute('id').split('-')[2];
                console.log('Comment link clicked for reviewId:', reviewId);
                toggleComments(reviewId);
                showCommentBox(reviewId, this, true); // Pass true to enable scroll effect
            });
        });

        commentToggles.forEach(function(commentToggle) {
            commentToggle.addEventListener("click", function() {
                var reviewId = this.closest('.review-container').getAttribute('data-review-id');
                console.log('Comments toggle clicked for reviewId:', reviewId);
                toggleComments(reviewId);
                showCommentBox(reviewId, null, false); // Pass false to disable scroll effect
            });
        });
    });

    function toggleComments(reviewId) {
        var commentsContainer = document.getElementById('comments-container-' + reviewId);
        if (commentsContainer.style.display === 'none' || commentsContainer.style.display === '') {
            commentsContainer.style.display = 'block';
        } else {
            commentsContainer.style.display = 'none';
        }
    }

    function showCommentBox(reviewId, commentLink = null, shouldScroll = false) {
        var commentBox = document.getElementById('comment-box-' + reviewId);
        var commentInput = document.getElementById('comment-input-' + reviewId);
        var postButton = document.getElementById('comment-submit-' + reviewId);
        commentBox.style.display = 'block';

        if (commentLink) {
            commentLink.style.display = 'none'; // Hide the comment link if present
        }

        // Debugging output to check shouldScroll value
        console.log('shouldScroll:', shouldScroll);

        // Check the shouldScroll parameter before applying the scroll effect
        if (shouldScroll) {
            commentBox.scrollIntoView({ behavior: 'smooth', block: 'nearest' }); // Scroll to the comment box
        }

        commentInput.focus(); // Focus on the comment input

        // Show post button when user starts typing
        commentInput.addEventListener("input", function() {
            if (commentInput.value.trim() !== '') {
                postButton.style.display = 'block';
            } else {
                postButton.style.display = 'none';
            }
        });
    }
</script>


<script>
    document.addEventListener('DOMContentLoaded', () => {
        console.log('DOM fully loaded and parsed');
    
        document.querySelectorAll('.comment-submit').forEach(button => {
            console.log('Setting up event listener for comment submit button:', button);
    
            button.addEventListener('click', async (event) => {
                const reviewId = event.target.dataset.reviewId;
                console.log('Review ID:', reviewId);
    
                const contentElement = document.getElementById(`comment-input-${reviewId}`);
                console.log('Content element:', contentElement);
    
                if (!contentElement) {
                    console.error(`No comment input found for reviewId: ${reviewId}`);
                    return;
                }
    
                let content = contentElement.value;
                console.log('Raw content:', content);
    
                if (typeof content !== 'string') {
                    console.error('Content is not a string:', content);
                    return;
                }
    
                content = content.trim();
                console.log('Trimmed content:', content);
    
                if (!content) {
                    console.warn('Comment content is empty, ignoring submission.');
                    return; // Ignore empty comments
                }
    
                try {
                    console.log('Sending fetch request to submit comment with content:', content);
    
                    const response = await fetch(`/book/${reviewId}/comment`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ content })
                    });
    
                    console.log('Fetch response received');
    
                    const data = await response.json();
                    console.log('Response data:', data);
    
                    if (data.success) {
                        console.log('Comment submission successful, updating UI...');
    
                        const commentHtml = `
                            <div class="col-12 mb-3">
                                <div class="row">
                                    <div class="col-lg-1 col-md-2 col-1 mt-2">
                                        <div class="user-image-placeholder"></div>
                                    </div>
                                    <div class="col-lg-10 col-md-10 mt-2">
                                        <div class="d-flex justify-content-between">
                                            <div class="d-flex">
                                                <div style="font-family: Arial, sans-serif; font-weight: 700; font-size: 16px; line-height: 23px; color: #1e1915;">
                                                    ${data.comment.userFullName}
                                                </div>
                                                <div class="ms-2" style="font-family: Arial, sans-serif; font-weight: 400; font-size: 14px; line-height: 19px; color: #707070;">
                                                    ${data.comment.formattedDate}
                                                </div>
                                            </div>
                                            <div>
                                                <i class="bi bi-three-dots fs-5"></i>
                                            </div>
                                        </div>
                                        <div style="font-family: Arial, sans-serif; font-weight: 400; font-size: 16px; line-height: 23px; color: #1e1915;">
                                            ${data.comment.content}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `;
    
                        const commentBox = document.getElementById(`comment-box-${reviewId}`);
                        const commentInputContainer = commentBox.querySelector('.comment-input-container');
                        commentInputContainer.insertAdjacentHTML('beforebegin', commentHtml);
                        
                        contentElement.value = ''; // Clear input
    
                        // Update comment count
                        const commentCountElement = document.querySelector(`[data-review-id="${reviewId}"] .comment-count`);
                        commentCountElement.textContent = parseInt(commentCountElement.textContent) + 1;
    
                        commentBox.style.display = 'block'; // Show comments section
                    } else {
                        console.error('Error from server:', data.error);
                    }
                } catch (error) {
                    console.error('Error submitting comment:', error);
                }
            });
        });
    });
    </script>
    


<script>
    document.addEventListener("DOMContentLoaded", function() {
        var showMoreCommentLinks = document.querySelectorAll(".show-more-link-comment");
        console.log("Found show more links for comments:", showMoreCommentLinks);

        showMoreCommentLinks.forEach(function(link) {
            link.addEventListener("click", function(event) {
                event.preventDefault();
                var commentId = this.getAttribute("data-comment-id");
                var commentContentShort = this.closest('.comment-container').querySelector('.comment-content-short');
                var commentContentFull = this.closest('.comment-container').querySelector('.comment-content-full');

                console.log("Short comment content element:", commentContentShort);
                console.log("Full comment content element:", commentContentFull);

                fetch(`/comment/${commentId}`)
                    .then(response => response.json())
                    .then(data => {
                        commentContentShort.style.display = 'none';
                        commentContentFull.innerHTML = data.content;
                        commentContentFull.style.display = 'block';
                        console.log("Full comment content displayed");
                    })
                    .catch(error => console.error('Error fetching comment:', error));
            });
        });
    });
</script>

<script>
    let commentIdToDelete = null;

    function toggleDeletePopup(event) {
        var commentId = event.target.getAttribute("data-comment-id");
        var popup = document.getElementById("delete-popup-" + commentId);
        if (popup.style.display === "none") {
            popup.style.display = "block";
        } else {
            popup.style.display = "none";
        }
    }

    function confirmDeleteComment(event, commentId) {
        event.preventDefault(); 
        commentIdToDelete = commentId;
        var deleteModal = new bootstrap.Modal(document.getElementById('deleteCommentModal'));
        deleteModal.show();
    }

    document.getElementById('confirmDeleteButton').addEventListener('click', function() {
        if (commentIdToDelete) {
            deleteComment(commentIdToDelete);
            commentIdToDelete = null;
            var deleteModal = bootstrap.Modal.getInstance(document.getElementById('deleteCommentModal'));
            deleteModal.hide();
        }
    });

    function deleteComment(commentId) {
        fetch(`/comment/${commentId}`, {
            method: 'DELETE',
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                var commentElement = document.querySelector(`[data-comment-id="${commentId}"]`).closest('.comment-container');
                commentElement.remove();
                updateCommentCount();
                console.log("Comment deleted successfully");
            } else {
                console.error('Failed to delete comment');
            }
        })
        .catch(error => console.error('Error deleting comment:', error));
    }

    function updateCommentCount() {
        var commentCountElement = document.querySelector('.comment-count');
        var currentCount = parseInt(commentCountElement.innerText);
        commentCountElement.innerText = currentCount - 1;
    }
</script>            